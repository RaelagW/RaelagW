#include <iostream>

using namespace std;

struct Node{
    int data;
    Node *next;

    Node(int data){
        this->data = data;
        next = nullptr;
    }
};

class queue{
    Node *front, *rear;
public:
    queue(){front = rear = nullptr;}
    bool empty(){return front == nullptr && rear == nullptr;}
    void push(int data){
        Node* newNode = new Node(data);
        if(empty()){ front = rear = newNode; return;}
        rear->next = newNode;
        rear = newNode;
    }

    void pop(){
        if(empty()) return;
        if(front == rear){delete front; front = rear = nullptr; return;}
        Node* temp = front;
        front = front->next;
        delete temp;
    }

    void print(){
        if(empty()) return;
        Node *temp = front;
        while(temp != rear){
            cout << temp->data << " ";
            temp = temp->next;
        }
        cout << rear->data << " " << endl;
    }

    int getMax(){
        if(empty()) return -1;
        int max = front->data;
        Node *temp = front;
        while(temp != rear){
            if(temp->data > max) max = temp->data;
            temp = temp->next;
        }
        if(rear->data > max) max = rear->data;
        return max;
    }
};

int main(){
    queue q;
    q.push(2);
    q.push(4);
    q.push(6);
    q.push(8);
    q.push(10);
    q.print();
    cout << q.getMax();
    return 0;
}
